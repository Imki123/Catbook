{"version":3,"sources":["assets/main.png","assets/dog_main.png","styles.js","App.js","env.js","web-build/register-service-worker.js"],"names":["module","exports","screenWidth","Math","round","Dimensions","get","width","styles","height","StyleSheet","create","container","flex","alignItems","justifyContent","marginTop","Constants","statusBarHeight","maxWidth","margin","contentContainer","flexGrow","title","fontSize","fontWeight","image","resizeMode","button","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","buttonText","color","textContainer","textAlign","changeBookView","display","flexDirection","changeBookText","padding","SelectStyles","inputIOS","borderWidth","borderColor","alignSelf","paddingRight","inputAndroid","App","useState","whatBook","setWhatBook","imageUri","setImageUri","breeds","setBreeds","breed","setBreed","cat","setCat","randomable","setRandomable","useEffect","url","axios","then","res","items","label","value","i","data","length","push","name","id","backHandler","BackHandler","addEventListener","Alert","alert","text","onPress","console","log","style","exitApp","remove","searchCatAsync","searchBreed","num","floor","random","headers","SafeAreaView","ScrollView","contentContainerStyle","centerContent","Text","Image","source","require","uri","placeholder","onValueChange","index","View","undefined","alt_names","origin","adaptability","affection_level","energy_level","child_friendly","dog_friendly","temperament","description","TouchableOpacity","navigator","window","serviceWorker","register","scope","info","catch","error"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,6NCGrCC,EAAcC,KAAKC,MAAMC,IAAWC,IAAI,UAAUC,OAGpDC,GAFiBL,KAAKC,MAAMC,IAAWC,IAAI,UAAUG,QAE5CC,IAAWC,OAAO,CAC9BC,UAAW,CACVC,KAAM,EACNC,WAAY,SACZC,eAAgB,SAChBC,UAAWC,IAAUC,gBACrBC,SAAU,IACVC,OAAQ,QAETC,iBAAkB,CACjBC,SAAU,EACVR,WAAY,SACZC,eAAgB,SAChBI,SAAU,IACVC,OAAQ,QAETG,MAAO,CACNC,SAAU,GACVC,WAAY,QAEbC,MAAO,CACNnB,MAAOL,EACPiB,SAAU,IACVV,OAAQ,IACRkB,WAAY,WAGbC,OAAQ,CACPC,gBAAiB,OACjBC,kBAAmB,GACnBC,gBAAiB,GACjBC,aAAc,GAEfC,WAAY,CACXT,SAAU,GACVU,MAAO,QAERC,cAAe,CACdC,UAAW,OACXZ,SAAU,GACVjB,MAAO,KAER8B,eAAgB,CACf9B,MAAOL,EACLoC,QAAS,OACTC,cAAe,MACfxB,eAAgB,YAEnByB,eAAgB,CACbpB,OAAQ,EACVI,SAAU,GACVU,MAAO,OACPO,QAAS,OAILC,EAAehC,IAAWC,OAAO,CAEtCgC,SAAU,CACTnB,SAAU,GACVO,gBAAiB,GACjBD,kBAAmB,GACnBc,YAAa,EACbC,YAAa,OACbb,aAAc,EACdE,MAAO,QACP3B,MAAO,IACPuC,UAAW,SACXC,aAAc,IAEfC,aAAc,CACbxB,SAAU,GACVjB,MAAO,IACPuC,UAAW,SACXZ,MAAO,WCvEM,SAASe,IAAO,IAAD,EACGC,mBAAS,OADZ,WACtBC,EADsB,KACZC,EADY,OAEGF,mBAAS,MAFZ,WAEtBG,EAFsB,KAEZC,EAFY,OAGDJ,mBAAS,MAHR,WAGtBK,EAHsB,KAGdC,EAHc,OAIHN,mBAAS,MAJN,WAItBO,EAJsB,KAIfC,EAJe,OAKPR,mBAAS,MALF,WAKtBS,EALsB,KAKjBC,EALiB,OAMOV,oBAAS,GANhB,WAMtBW,EANsB,KAMVC,EANU,KAQ7BC,qBAAU,WAET,IAAIC,EAAM,sCACO,QAAbb,EAAoBa,EAAM,sCACR,QAAbb,IAAoBa,EAAM,uCAEnCC,IAAMD,GAAKE,MAAK,SAACC,GAEhB,IADA,IAAMC,EAAQ,CAAC,CAAEC,MAAO,eAAMC,MAAO,WAC5BC,EAAI,EAAGA,EAAIJ,EAAIK,KAAKC,OAAQF,IACpCH,EAAMM,KAAK,CACVL,MAAOF,EAAIK,KAAKD,GAAGI,KACnBL,MAAOH,EAAIK,KAAKD,GAAGK,KAGrBpB,EAAUY,GACVN,GAAc,QAEb,CAACX,IAEJY,qBAAU,WAET,IAqBMc,EAAcC,IAAYC,iBAAiB,qBArB9B,WAmBlB,OAlBAC,IAAMC,MAAM,uBAAc,4DAAqB,CAC9C,CACCC,KAAM,SACNC,QAAS,kBAAMC,QAAQC,IAAI,aAC3BC,MAAO,UAER,CACCJ,KAAM,MACNC,QAAS,WACR7B,EAAY,MACZM,EAAO,MACPF,EAAS,MACTN,EAAY,OACZ0B,IAAYS,UACZV,EAAYW,cAIR,QAKTzB,qBAAU,WAETqB,QAAQC,IAAI,oBAAqB5B,GACnB,OAAVA,GAGHgC,MAEC,CAAChC,IAGJ,IAWMgC,EAAiB,WACtB,IAAIC,EAAcjC,EAClB,GAAc,WAAVA,GAEH,GAAII,EAAY,CAEf,IAAI8B,EAAMxF,KAAKyF,MAAMzF,KAAK0F,SAAWtC,EAAOkB,QAC5CiB,EAAcnC,EAAOoC,GAAKrB,MAC1Bc,QAAQC,IAAI,gCAAiCK,SAI9CN,QAAQC,IAAI,yBAA0BK,GAEvC,IAAI1B,EAAM,wDAA0D0B,EACnD,QAAbvC,EAAoBa,EAAM,wDAA0D0B,EAClE,QAAbvC,IAAoBa,EAAM,wDAA0D0B,GAG7FzB,IAAM3D,IAAI0D,EAAK,CACd8B,QAAS,CAAE,YCxGI,0CDyGb5B,MAAK,SAACC,GACJA,EAAIK,KAAK,IACZlB,EAAYa,EAAIK,KAAK,GAAGR,KAuBxBJ,EAAOO,EAAIK,KAAK,MAEhBlB,EAAY,MACZM,EAAO,eAIV,OACC,kBAACmC,EAAA,EAAD,CAAcT,MAAO9E,EAAOI,WAC3B,kBAACoF,EAAA,EAAD,CAAYC,sBAAuBzF,EAAOa,iBAAkB6E,eAAe,GAE5D,QAAb/C,EACA,kBAACgD,EAAA,EAAD,CAAMb,MAAO9E,EAAOe,OAApB,WACS,kBAAC,IAAD,CAAOoD,KAAK,OAAOW,MAAO,CAAE9D,SAAU,OAG/C,kBAAC2E,EAAA,EAAD,CAAMb,MAAO9E,EAAOe,OAApB,WACS,kBAAC,IAAD,CAAOoD,KAAK,OAAOW,MAAO,CAAE9D,SAAU,OAKlC,OAAb6B,EACA,oCAAgB,QAAbF,EAAqB,kBAACiD,EAAA,EAAD,CAAOC,OAAQC,EAAQ,KAAsBhB,MAAO9E,EAAOkB,QAAY,kBAAC0E,EAAA,EAAD,CAAOC,OAAQC,EAAQ,KAA0BhB,MAAO9E,EAAOkB,SAE9J,kBAAC0E,EAAA,EAAD,CAAOC,OAAQ,CAAEE,IAAKlD,GAAYiC,MAAO9E,EAAOkB,QAIhD6B,GAAU,kBAAC,IAAD,CAAQiD,YAAa,GAAIpC,MAAOb,EAAQ+B,MAAO5C,EAAc+D,cAAe,SAACnC,EAAOoC,GAAR,OAAkBhD,EAASY,MAGjHX,GACA,oCACS,UAAPA,EACA,kBAACgD,EAAA,EAAD,CAAMrB,MAAO9E,EAAO2B,eACnB,kBAACgE,EAAA,EAAD,wBAAaxC,EAAIJ,OAAO,GAAGoB,WACCiC,GAA3BjD,EAAIJ,OAAO,GAAGsD,WAA0B,kBAACV,EAAA,EAAD,wBAAaxC,EAAIJ,OAAO,GAAGsD,gBAC3CD,GAAxBjD,EAAIJ,OAAO,GAAGuD,QAAuB,kBAACX,EAAA,EAAD,8BAAcxC,EAAIJ,OAAO,GAAGuD,aACnCF,GAA9BjD,EAAIJ,OAAO,GAAGwD,cACd,kBAACZ,EAAA,EAAD,wEACqBxC,EAAIJ,OAAO,GAAGwD,aADnC,MACoDpD,EAAIJ,OAAO,GAAGyD,gBADlE,MACsFrD,EAAIJ,OAAO,GAAG0D,mBAGpEL,GAAhCjD,EAAIJ,OAAO,GAAG2D,gBACd,kBAACf,EAAA,EAAD,uFACqBxC,EAAIJ,OAAO,GAAG2D,eADnC,MACsDvD,EAAIJ,OAAO,GAAG4D,mBAGvCP,GAA7BjD,EAAIJ,OAAO,GAAG6D,aAA4B,kBAACjB,EAAA,EAAD,wBAAaxC,EAAIJ,OAAO,GAAG6D,kBACxCR,GAA7BjD,EAAIJ,OAAO,GAAG8D,aAA4B,kBAAClB,EAAA,EAAD,wBAAaxC,EAAIJ,OAAO,GAAG8D,cAGvE,kBAACV,EAAA,EAAD,CAAMrB,MAAO9E,EAAO2B,eACnB,kBAACgE,EAAA,EAAD,CAAMb,MAAO,CAAElD,UAAW,WAA1B,sDACY,kBAAC,IAAD,CAAOuC,KAAK,MAAMW,MAAO,CAAE9D,SAAU,SAQrD,kBAAC8F,EAAA,EAAD,CAAkBnC,QAxHA,WACpBC,QAAQC,IAAI,gBACE,OAAV5B,EAEHC,EAAS,UAET+B,KAkH0CH,MAAO9E,EAAOoB,QACtD,kBAACuE,EAAA,EAAD,CAAMb,MAAO9E,EAAOyB,YAA0B,QAAbkB,EAAqB,kCAAW,oCAIlE,kBAACwD,EAAA,EAAD,CAAMrB,MAAO9E,EAAO6B,gBACnB,kBAAC8D,EAAA,EAAD,CACCb,MAAO9E,EAAOgC,eACd2C,QAAS,WACa/B,EAAR,QAAbD,EAAiC,MAAqB,OACtDO,EAAS,MACTJ,EAAY,MACZM,EAAO,MACPE,GAAc,KAGD,QAAbX,EAAqB,yCAAa,qD,4DE/MrC,kBAAmBoE,WACrBC,OAAOzC,iBAAiB,QAAQ,WAC9BwC,UAAUE,cACPC,SAAS,kCAAmC,CAAEC,MAAO,cACrDzD,MAAK,SAAU0D,OAGfC,OAAM,SAAUC,GACf1C,QAAQwC,KAAK,oCAAqCE,W","file":"static/js/app.41659436.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/main.39efc8fa.png\";","module.exports = __webpack_public_path__ + \"static/media/dog_main.d60d4c9c.png\";","import { StyleSheet, Dimensions } from 'react-native'\r\nimport Constants from 'expo-constants'\r\n\r\nconst screenWidth = Math.round(Dimensions.get('window').width)\r\nconst screenHeight = Math.round(Dimensions.get('window').height)\r\n\r\nlet styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t\tmarginTop: Constants.statusBarHeight,\r\n\t\tmaxWidth: 600,\r\n\t\tmargin: 'auto',\r\n\t},\r\n\tcontentContainer: {\r\n\t\tflexGrow: 1,\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t\tmaxWidth: 600,\r\n\t\tmargin: 'auto',\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 30,\r\n\t\tfontWeight: 'bold',\r\n\t},\r\n\timage: {\r\n\t\twidth: screenWidth,\r\n\t\tmaxWidth: 600,\r\n\t\theight: 300,\r\n\t\tresizeMode: 'contain',\r\n\t},\r\n\r\n\tbutton: {\r\n\t\tbackgroundColor: 'blue',\r\n\t\tpaddingHorizontal: 20,\r\n\t\tpaddingVertical: 15,\r\n\t\tborderRadius: 5,\r\n\t},\r\n\tbuttonText: {\r\n\t\tfontSize: 20,\r\n\t\tcolor: '#fff',\r\n\t},\r\n\ttextContainer: {\r\n\t\ttextAlign: 'left',\r\n\t\tfontSize: 16,\r\n\t\twidth: 300,\r\n\t},\r\n\tchangeBookView: {\r\n\t\twidth: screenWidth,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n\t},\r\n\tchangeBookText: {\r\n    margin: 0,\r\n\t\tfontSize: 14,\r\n\t\tcolor: 'blue',\r\n\t\tpadding: 10,\r\n\t},\r\n})\r\n\r\nconst SelectStyles = StyleSheet.create({\r\n\t//셀렉트 박스 스타일\r\n\tinputIOS: {\r\n\t\tfontSize: 20,\r\n\t\tpaddingVertical: 12,\r\n\t\tpaddingHorizontal: 10,\r\n\t\tborderWidth: 1,\r\n\t\tborderColor: 'gray',\r\n\t\tborderRadius: 4,\r\n\t\tcolor: 'black',\r\n\t\twidth: 300,\r\n\t\talignSelf: 'center',\r\n\t\tpaddingRight: 30, // to ensure the text is never behind the icon\r\n\t},\r\n\tinputAndroid: {\r\n\t\tfontSize: 20,\r\n\t\twidth: 300,\r\n\t\talignSelf: 'center',\r\n\t\tcolor: 'black',\r\n\t},\r\n})\r\n\r\nexport { styles, SelectStyles }\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Text, View, Image, TouchableOpacity, Alert, BackHandler, SafeAreaView, ScrollView } from 'react-native'\r\nimport Select from 'react-native-picker-select'\r\nimport axios from 'axios'\r\nimport Emoji from 'react-native-emoji'\r\nimport { styles, SelectStyles } from './styles.js'\r\n//import translator, { translate } from './translator.js'\r\nimport { CAT_API_KEY } from './env.js'\r\n\r\nexport default function App() {\r\n\tconst [whatBook, setWhatBook] = useState('cat') //book 선택\r\n\tconst [imageUri, setImageUri] = useState(null) //이미지 url\r\n\tconst [breeds, setBreeds] = useState(null) //종 리스트\r\n\tconst [breed, setBreed] = useState(null) //선택한 고양이 종류\r\n\tconst [cat, setCat] = useState(null) //고양이 정보\r\n\tconst [randomable, setRandomable] = useState(false) //랜덤검색 가능여부\r\n\r\n\tuseEffect(() => {\r\n\t\t//고양이종 리스트 가져오기. 한번만\r\n\t\tlet url = 'https://api.thecatapi.com/v1/breeds'\r\n\t\tif (whatBook === 'cat') url = 'https://api.thecatapi.com/v1/breeds'\r\n\t\telse if (whatBook === 'dog') url = 'https://api.thedogapi.com/v1/breeds'\r\n\r\n\t\taxios(url).then((res) => {\r\n\t\t\tconst items = [{ label: '랜덤', value: 'random' }]\r\n\t\t\tfor (let i = 0; i < res.data.length; i++) {\r\n\t\t\t\titems.push({\r\n\t\t\t\t\tlabel: res.data[i].name,\r\n\t\t\t\t\tvalue: res.data[i].id,\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tsetBreeds(items)\r\n\t\t\tsetRandomable(true)\r\n\t\t})\r\n\t}, [whatBook])\r\n\r\n\tuseEffect(() => {\r\n\t\t//백버튼 종료 확인하기\r\n\t\tconst backAction = () => {\r\n\t\t\tAlert.alert('Catbook 종료', 'Catbook을 종료하시겠어요?', [\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: 'Cancel',\r\n\t\t\t\t\tonPress: () => console.log('canceled'),\r\n\t\t\t\t\tstyle: 'cancel',\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: 'Yes',\r\n\t\t\t\t\tonPress: () => {\r\n\t\t\t\t\t\tsetImageUri(null)\r\n\t\t\t\t\t\tsetCat(null)\r\n\t\t\t\t\t\tsetBreed(null)\r\n\t\t\t\t\t\tsetWhatBook('cat')\r\n\t\t\t\t\t\tBackHandler.exitApp()\r\n\t\t\t\t\t\tbackHandler.remove()\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t])\r\n\t\t\treturn true\r\n\t\t}\r\n\t\tconst backHandler = BackHandler.addEventListener('hardwareBackPress', backAction)\r\n\t})\r\n\r\n\tuseEffect(() => {\r\n\t\t//고양이 종류 바뀌면 작동. 이미지 새로 가져오기\r\n\t\tconsole.log('useEffect, breed:', breed)\r\n\t\tif (breed === null) {\r\n\t\t\t//null이면 아무것도 안함. 메인이미지.\r\n\t\t} else {\r\n\t\t\tsearchCatAsync()\r\n\t\t}\r\n\t}, [breed])\r\n\r\n\t//찾기 버튼 클릭시\r\n\tconst handleButton = () => {\r\n\t\tconsole.log('handleButton')\r\n\t\tif (breed === null) {\r\n\t\t\t//null이면 랜덤으로 설정\r\n\t\t\tsetBreed('random')\r\n\t\t} else {\r\n\t\t\tsearchCatAsync()\r\n\t\t}\r\n\t}\r\n\r\n\t//고양이 정보 가져오기\r\n\tconst searchCatAsync = () => {\r\n\t\tlet searchBreed = breed\r\n\t\tif (breed === 'random') {\r\n\t\t\t//랜덤 이미지 가져오기\r\n\t\t\tif (randomable) {\r\n\t\t\t\t//랜덤검색이 가능할때만\r\n\t\t\t\tlet num = Math.floor(Math.random() * breeds.length) //고양이 종류만큼 정수 난수 생성\r\n\t\t\t\tsearchBreed = breeds[num].value\r\n\t\t\t\tconsole.log('searchCatAsync, random breed:', searchBreed)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//종류별 이미지 가져오기\r\n\t\t\tconsole.log('searchCatAsync, breed:', searchBreed)\r\n\t\t}\r\n\t\tlet url = 'https://api.thecatapi.com/v1/images/search?breed_ids=' + searchBreed\r\n\t\tif (whatBook === 'cat') url = 'https://api.thecatapi.com/v1/images/search?breed_ids=' + searchBreed\r\n\t\telse if (whatBook === 'dog') url = 'https://api.thedogapi.com/v1/images/search?breed_ids=' + searchBreed\r\n\r\n\t\t//이미지 및 정보 가져오기\r\n\t\taxios.get(url, {\r\n\t\t\theaders: { 'x-api-key': CAT_API_KEY }, //cat-api\r\n\t\t}).then((res) => {\r\n\t\t\tif (res.data[0]) {\r\n\t\t\t\tsetImageUri(res.data[0].url)\r\n\r\n\t\t\t\t//번역하기 //API_KEY가 노출 되는 관계로 잠시 미사용\r\n\t\t\t\t/* let text = ''\r\n\t\t\t\tif (res.data[0].breeds[0].temperament) {\r\n\t\t\t\t\ttext += res.data[0].breeds[0].temperament\r\n\t\t\t\t}\r\n\t\t\t\tif (res.data[0].breeds[0].description) {\r\n\t\t\t\t\ttext += '/' + res.data[0].breeds[0].description\r\n\t\t\t\t}\r\n\t\t\t\ttranslate(text)\r\n\t\t\t\t\t.then((translated) => {\r\n\t\t\t\t\t\tconsole.log(translated)\r\n\t\t\t\t\t\ttranslated = translated.split('/')\r\n\r\n\t\t\t\t\t\tres.data[0].breeds[0].temperament = translated[0]\r\n\t\t\t\t\t\tres.data[0].breeds[0].description = translated[1]\r\n\t\t\t\t\t\tsetCat(res.data[0])\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((e) => {\r\n\t\t\t\t\t\tconsole.log(e)\r\n\t\t\t\t\t\tsetCat(res.data[0])\r\n\t\t\t\t\t}) */\r\n\t\t\t\tsetCat(res.data[0])\r\n\t\t\t} else {\r\n\t\t\t\tsetImageUri(null)\r\n\t\t\t\tsetCat('noInfo')\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\treturn (\r\n\t\t<SafeAreaView style={styles.container}>\r\n\t\t\t<ScrollView contentContainerStyle={styles.contentContainer} centerContent={true}>\r\n\t\t\t\t{/* Catbook */}\r\n\t\t\t\t{whatBook === 'cat' ? (\r\n\t\t\t\t\t<Text style={styles.title}>\r\n\t\t\t\t\t\tCatbook <Emoji name=\"cat2\" style={{ fontSize: 20 }} />\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Text style={styles.title}>\r\n\t\t\t\t\t\tDogbook <Emoji name=\"dog2\" style={{ fontSize: 20 }} />\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{/* 고양이 이미지 */}\r\n\t\t\t\t{imageUri === null ? (\r\n\t\t\t\t\t<>{whatBook === 'cat' ? <Image source={require('./assets/main.png')} style={styles.image} /> : <Image source={require('./assets/dog_main.png')} style={styles.image} />}</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Image source={{ uri: imageUri }} style={styles.image} />\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{/* 고양이 종 목록 */}\r\n\t\t\t\t{breeds && <Select placeholder={{}} items={breeds} style={SelectStyles} onValueChange={(value, index) => setBreed(value)} />}\r\n\r\n\t\t\t\t{/* 고양이 설명 */}\r\n\t\t\t\t{cat && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{cat != 'noInfo' ? (\r\n\t\t\t\t\t\t\t<View style={styles.textContainer}>\r\n\t\t\t\t\t\t\t\t<Text>- 종류: {cat.breeds[0].name}</Text>\r\n\t\t\t\t\t\t\t\t{cat.breeds[0].alt_names != undefined && <Text>- 별명: {cat.breeds[0].alt_names}</Text>}\r\n\t\t\t\t\t\t\t\t{cat.breeds[0].origin != undefined && <Text>- 출신지: {cat.breeds[0].origin}</Text>}\r\n\t\t\t\t\t\t\t\t{cat.breeds[0].adaptability != undefined && (\r\n\t\t\t\t\t\t\t\t\t<Text>\r\n\t\t\t\t\t\t\t\t\t\t- 적응력 / 애정도 / 에너지: {cat.breeds[0].adaptability} / {cat.breeds[0].affection_level} / {cat.breeds[0].energy_level}\r\n\t\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{cat.breeds[0].child_friendly != undefined && (\r\n\t\t\t\t\t\t\t\t\t<Text>\r\n\t\t\t\t\t\t\t\t\t\t- 어린이친화력 / 강아지친화력: {cat.breeds[0].child_friendly} / {cat.breeds[0].dog_friendly}\r\n\t\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{cat.breeds[0].temperament != undefined && <Text>- 성격: {cat.breeds[0].temperament}</Text>}\r\n\t\t\t\t\t\t\t\t{cat.breeds[0].description != undefined && <Text>- 특징: {cat.breeds[0].description}</Text>}\r\n\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<View style={styles.textContainer}>\r\n\t\t\t\t\t\t\t\t<Text style={{ textAlign: 'center' }}>\r\n\t\t\t\t\t\t\t\t\t찾는 정보가 없어요 <Emoji name=\"sob\" style={{ fontSize: 20 }} />\r\n\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{/* 찾기 버튼 */}\r\n\t\t\t\t<TouchableOpacity onPress={handleButton} style={styles.button}>\r\n\t\t\t\t\t<Text style={styles.buttonText}>{whatBook === 'cat' ? '고양이 찾기' : '강아지 찾기'}</Text>\r\n\t\t\t\t</TouchableOpacity>\r\n\r\n\t\t\t\t{/* Cat Dog 전환 */}\r\n\t\t\t\t<View style={styles.changeBookView}>\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tstyle={styles.changeBookText}\r\n\t\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\t\twhatBook === 'cat' ? setWhatBook('dog') : setWhatBook('cat')\r\n\t\t\t\t\t\t\tsetBreed(null)\r\n\t\t\t\t\t\t\tsetImageUri(null)\r\n\t\t\t\t\t\t\tsetCat(null)\r\n\t\t\t\t\t\t\tsetRandomable(false)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{whatBook === 'cat' ? '강아지 좋아해?' : '고양이 보러갈래?'}\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t</View>\r\n\t\t\t</ScrollView>\r\n\t\t</SafeAreaView>\r\n\t)\r\n}\r\n","const CAT_API_KEY='f3ec5a62-4a7a-4132-a6dc-922cd0cfcc48'\r\n\r\nexport { CAT_API_KEY }\r\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/catbook/expo-service-worker.js', { scope: '/catbook/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}